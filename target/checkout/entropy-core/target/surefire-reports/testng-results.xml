<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="91" passed="91">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="939" started-at="2013-11-29T15:46:08Z" finished-at="2013-11-29T15:46:09Z">
    <groups>
      <group name="unit">
        <method signature="TestManagedElementSets.testMax()[pri:0, instance:entropy.configuration.TestManagedElementSets@52929ed4]" name="testMax" class="entropy.configuration.TestManagedElementSets"/>
        <method signature="TestManagedElementSets.testMin()[pri:0, instance:entropy.configuration.TestManagedElementSets@52929ed4]" name="testMin" class="entropy.configuration.TestManagedElementSets"/>
        <method signature="TestManagedElementSets.testNodeMax()[pri:0, instance:entropy.configuration.TestManagedElementSets@52929ed4]" name="testNodeMax" class="entropy.configuration.TestManagedElementSets"/>
        <method signature="TestManagedElementSets.testNodeMin()[pri:0, instance:entropy.configuration.TestManagedElementSets@52929ed4]" name="testNodeMin" class="entropy.configuration.TestManagedElementSets"/>
        <method signature="TestManagedElementSets.testNodeSum()[pri:0, instance:entropy.configuration.TestManagedElementSets@52929ed4]" name="testNodeSum" class="entropy.configuration.TestManagedElementSets"/>
        <method signature="TestManagedElementSets.testSum()[pri:0, instance:entropy.configuration.TestManagedElementSets@52929ed4]" name="testSum" class="entropy.configuration.TestManagedElementSets"/>
        <method signature="TestResourcePicker.testNode()[pri:0, instance:entropy.configuration.TestResourcePicker@51a34231]" name="testNode" class="entropy.configuration.TestResourcePicker"/>
        <method signature="TestResourcePicker.testVM()[pri:0, instance:entropy.configuration.TestResourcePicker@51a34231]" name="testVM" class="entropy.configuration.TestResourcePicker"/>
        <method signature="TestSimpleVirtualMachine.testCPUConsumption()[pri:0, instance:entropy.configuration.TestSimpleVirtualMachine@354ec8d6]" name="testCPUConsumption" class="entropy.configuration.TestSimpleVirtualMachine"/>
        <method signature="TestSimpleVirtualMachine.testCPUMax()[pri:0, instance:entropy.configuration.TestSimpleVirtualMachine@354ec8d6]" name="testCPUMax" class="entropy.configuration.TestSimpleVirtualMachine"/>
        <method signature="TestSimpleVirtualMachine.testCopyConstructor()[pri:0, instance:entropy.configuration.TestSimpleVirtualMachine@354ec8d6]" name="testCopyConstructor" class="entropy.configuration.TestSimpleVirtualMachine"/>
        <method signature="TestSimpleVirtualMachine.testEquals()[pri:0, instance:entropy.configuration.TestSimpleVirtualMachine@354ec8d6]" name="testEquals" class="entropy.configuration.TestSimpleVirtualMachine"/>
        <method signature="TestSimpleVirtualMachine.testLazyConstructors()[pri:0, instance:entropy.configuration.TestSimpleVirtualMachine@354ec8d6]" name="testLazyConstructors" class="entropy.configuration.TestSimpleVirtualMachine"/>
        <method signature="TestSimpleVirtualMachine.testMemoryTotal()[pri:0, instance:entropy.configuration.TestSimpleVirtualMachine@354ec8d6]" name="testMemoryTotal" class="entropy.configuration.TestSimpleVirtualMachine"/>
        <method signature="TestSimpleVirtualMachine.testNbOfCPUs()[pri:0, instance:entropy.configuration.TestSimpleVirtualMachine@354ec8d6]" name="testNbOfCPUs" class="entropy.configuration.TestSimpleVirtualMachine"/>
        <method signature="TestSimpleVirtualMachine.testPlatform()[pri:0, instance:entropy.configuration.TestSimpleVirtualMachine@354ec8d6]" name="testPlatform" class="entropy.configuration.TestSimpleVirtualMachine"/>
        <method signature="TestSimpleVirtualMachine.testTemplate()[pri:0, instance:entropy.configuration.TestSimpleVirtualMachine@354ec8d6]" name="testTemplate" class="entropy.configuration.TestSimpleVirtualMachine"/>
        <method signature="TestSimpleVirtualMachine.testToString()[pri:0, instance:entropy.configuration.TestSimpleVirtualMachine@354ec8d6]" name="testToString" class="entropy.configuration.TestSimpleVirtualMachine"/>
        <method signature="TestSimpleVirtualMachine.testWithNeeds()[pri:0, instance:entropy.configuration.TestSimpleVirtualMachine@354ec8d6]" name="testWithNeeds" class="entropy.configuration.TestSimpleVirtualMachine"/>
        <method signature="TestSimpleVirtualMachine.testWithNoNeeds()[pri:0, instance:entropy.configuration.TestSimpleVirtualMachine@354ec8d6]" name="testWithNoNeeds" class="entropy.configuration.TestSimpleVirtualMachine"/>
        <method signature="TestVirtualMachineComparator.testEquivalent()[pri:0, instance:entropy.configuration.TestVirtualMachineComparator@476374f1]" name="testEquivalent" class="entropy.configuration.TestVirtualMachineComparator"/>
        <method signature="TestVirtualMachineComparator.testNonEquivalent()[pri:0, instance:entropy.configuration.TestVirtualMachineComparator@476374f1]" name="testNonEquivalent" class="entropy.configuration.TestVirtualMachineComparator"/>
        <method signature="TestVirtualMachineComparator.testSort()[pri:0, instance:entropy.configuration.TestVirtualMachineComparator@476374f1]" name="testSort" class="entropy.configuration.TestVirtualMachineComparator"/>
        <method signature="TestSimpleManagedElementSet.testToString()[pri:0, instance:entropy.configuration.TestSimpleManagedElementSet@77bb1dd2]" name="testToString" class="entropy.configuration.TestSimpleManagedElementSet"/>
        <method signature="TestConfiguration.testGetSleepingLocation()[pri:0, instance:entropy.configuration.TestConfiguration@20c52900]" name="testGetSleepingLocation" class="entropy.configuration.TestConfiguration"/>
        <method signature="TestSimpleNode.testCPUCapacity()[pri:0, instance:entropy.configuration.TestSimpleNode@5c1d8d6f]" name="testCPUCapacity" class="entropy.configuration.TestSimpleNode"/>
        <method signature="TestSimpleConfiguration.testSetRunOn()[pri:0, instance:entropy.configuration.TestSimpleConfiguration@6387f30b]" name="testSetRunOn" class="entropy.configuration.TestSimpleConfiguration"/>
        <method signature="TestSimpleConfiguration.testAddOffline()[pri:0, instance:entropy.configuration.TestSimpleConfiguration@6387f30b]" name="testAddOffline" class="entropy.configuration.TestSimpleConfiguration"/>
        <method signature="TestConfiguration.testGetSleepings()[pri:0, instance:entropy.configuration.TestConfiguration@20c52900]" name="testGetSleepings" class="entropy.configuration.TestConfiguration"/>
        <method signature="TestConfiguration.testGetPosition()[pri:0, instance:entropy.configuration.TestConfiguration@20c52900]" name="testGetPosition" class="entropy.configuration.TestConfiguration"/>
        <method signature="TestConfiguration.testSetSleepOn()[pri:0, instance:entropy.configuration.TestConfiguration@20c52900]" name="testSetSleepOn" class="entropy.configuration.TestConfiguration"/>
        <method signature="TestConfiguration.testRemove()[pri:0, instance:entropy.configuration.TestConfiguration@20c52900]" name="testRemove" class="entropy.configuration.TestConfiguration"/>
        <method signature="TestSimpleNode.testCopyConstructor()[pri:0, instance:entropy.configuration.TestSimpleNode@5c1d8d6f]" name="testCopyConstructor" class="entropy.configuration.TestSimpleNode"/>
        <method signature="TestSimpleConfiguration.testGetLocation()[pri:0, instance:entropy.configuration.TestSimpleConfiguration@6387f30b]" name="testGetLocation" class="entropy.configuration.TestSimpleConfiguration"/>
        <method signature="TestSimpleConfiguration.testGetOnlines()[pri:0, instance:entropy.configuration.TestSimpleConfiguration@6387f30b]" name="testGetOnlines" class="entropy.configuration.TestSimpleConfiguration"/>
        <method signature="TestPlainTextConfigurationSerializer.testUnknownFile()[pri:0, instance:entropy.configuration.parser.TestPlainTextConfigurationSerializer@4f3516d7]" name="testUnknownFile" class="entropy.configuration.parser.TestPlainTextConfigurationSerializer"/>
        <method signature="TestConfiguration.testToString()[pri:0, instance:entropy.configuration.TestConfiguration@20c52900]" name="testToString" class="entropy.configuration.TestConfiguration"/>
        <method signature="TestSimpleManagedElementSet.testEquals()[pri:0, instance:entropy.configuration.TestSimpleManagedElementSet@77bb1dd2]" name="testEquals" class="entropy.configuration.TestSimpleManagedElementSet"/>
        <method signature="TestFastBinPacking.testGuillaume()[pri:0, instance:entropy.core.packers.TestFastBinPacking@1830a1a8]" name="testGuillaume" class="entropy.core.packers.TestFastBinPacking"/>
        <method signature="TestPlainTextConfigurationSerializer.testBadContent()[pri:0, instance:entropy.configuration.parser.TestPlainTextConfigurationSerializer@4f3516d7]" name="testBadContent" class="entropy.configuration.parser.TestPlainTextConfigurationSerializer"/>
        <method signature="TestConfiguration.testAddOffline()[pri:0, instance:entropy.configuration.TestConfiguration@20c52900]" name="testAddOffline" class="entropy.configuration.TestConfiguration"/>
        <method signature="TestSimpleConfiguration.testVMStateConsistency()[pri:0, instance:entropy.configuration.TestSimpleConfiguration@6387f30b]" name="testVMStateConsistency" class="entropy.configuration.TestSimpleConfiguration"/>
        <method signature="TestConfiguration.testGetWaitings()[pri:0, instance:entropy.configuration.TestConfiguration@20c52900]" name="testGetWaitings" class="entropy.configuration.TestConfiguration"/>
        <method signature="TestSimpleManagedElementSet.testGetFromName()[pri:0, instance:entropy.configuration.TestSimpleManagedElementSet@77bb1dd2]" name="testGetFromName" class="entropy.configuration.TestSimpleManagedElementSet"/>
        <method signature="TestSimpleManagedElementSet.testSelfContains()[pri:0, instance:entropy.configuration.TestSimpleManagedElementSet@77bb1dd2]" name="testSelfContains" class="entropy.configuration.TestSimpleManagedElementSet"/>
        <method signature="TestSimpleManagedElementSet.testRetainAll()[pri:0, instance:entropy.configuration.TestSimpleManagedElementSet@77bb1dd2]" name="testRetainAll" class="entropy.configuration.TestSimpleManagedElementSet"/>
        <method signature="TestSimpleConfiguration.testSetSleepOn()[pri:0, instance:entropy.configuration.TestSimpleConfiguration@6387f30b]" name="testSetSleepOn" class="entropy.configuration.TestSimpleConfiguration"/>
        <method signature="TestVirtualMachinesSetComparator.test1()[pri:0, instance:entropy.configuration.TestVirtualMachinesSetComparator@69d5ee81]" name="test1" class="entropy.configuration.TestVirtualMachinesSetComparator"/>
        <method signature="TestSimpleManagedElementSet.testCopyConstructor()[pri:0, instance:entropy.configuration.TestSimpleManagedElementSet@77bb1dd2]" name="testCopyConstructor" class="entropy.configuration.TestSimpleManagedElementSet"/>
        <method signature="TestConfiguration.testGetRunnings()[pri:0, instance:entropy.configuration.TestConfiguration@20c52900]" name="testGetRunnings" class="entropy.configuration.TestConfiguration"/>
        <method signature="TestSimpleConfiguration.testNotEquals()[pri:0, instance:entropy.configuration.TestSimpleConfiguration@6387f30b]" name="testNotEquals" class="entropy.configuration.TestSimpleConfiguration"/>
        <method signature="TestConfiguration.testAddWaiting()[pri:0, instance:entropy.configuration.TestConfiguration@20c52900]" name="testAddWaiting" class="entropy.configuration.TestConfiguration"/>
        <method signature="TestSimpleManagedElementSet.testSingleton()[pri:0, instance:entropy.configuration.TestSimpleManagedElementSet@77bb1dd2]" name="testSingleton" class="entropy.configuration.TestSimpleManagedElementSet"/>
        <method signature="TestSimpleConfiguration.testToString()[pri:0, instance:entropy.configuration.TestSimpleConfiguration@6387f30b]" name="testToString" class="entropy.configuration.TestSimpleConfiguration"/>
        <method signature="TestSimpleManagedElementSet.testClear()[pri:0, instance:entropy.configuration.TestSimpleManagedElementSet@77bb1dd2]" name="testClear" class="entropy.configuration.TestSimpleManagedElementSet"/>
        <method signature="TestSimpleConfiguration.testAddWaiting()[pri:0, instance:entropy.configuration.TestSimpleConfiguration@6387f30b]" name="testAddWaiting" class="entropy.configuration.TestSimpleConfiguration"/>
        <method signature="TestSimpleNode.testLazyConstructor()[pri:0, instance:entropy.configuration.TestSimpleNode@5c1d8d6f]" name="testLazyConstructor" class="entropy.configuration.TestSimpleNode"/>
        <method signature="TestConfiguration.testAddOnline()[pri:0, instance:entropy.configuration.TestConfiguration@20c52900]" name="testAddOnline" class="entropy.configuration.TestConfiguration"/>
        <method signature="TestSimpleManagedElementSet.testAddAll()[pri:0, instance:entropy.configuration.TestSimpleManagedElementSet@77bb1dd2]" name="testAddAll" class="entropy.configuration.TestSimpleManagedElementSet"/>
        <method signature="TestSimpleConfiguration.testAddOnline()[pri:0, instance:entropy.configuration.TestSimpleConfiguration@6387f30b]" name="testAddOnline" class="entropy.configuration.TestSimpleConfiguration"/>
        <method signature="TestSimpleConfiguration.testAddOnline2()[pri:0, instance:entropy.configuration.TestSimpleConfiguration@6387f30b]" name="testAddOnline2" class="entropy.configuration.TestSimpleConfiguration"/>
        <method signature="TestSimpleConfiguration.testGetWaitings()[pri:0, instance:entropy.configuration.TestSimpleConfiguration@6387f30b]" name="testGetWaitings" class="entropy.configuration.TestSimpleConfiguration"/>
        <method signature="TestSimpleConfiguration.testRemove()[pri:0, instance:entropy.configuration.TestSimpleConfiguration@6387f30b]" name="testRemove" class="entropy.configuration.TestSimpleConfiguration"/>
        <method signature="TestConfiguration.testNotEquals()[pri:0, instance:entropy.configuration.TestConfiguration@20c52900]" name="testNotEquals" class="entropy.configuration.TestConfiguration"/>
        <method signature="TestSimpleNode.testPlatform()[pri:0, instance:entropy.configuration.TestSimpleNode@5c1d8d6f]" name="testPlatform" class="entropy.configuration.TestSimpleNode"/>
        <method signature="TestConfiguration.testGetRunningLocation()[pri:0, instance:entropy.configuration.TestConfiguration@20c52900]" name="testGetRunningLocation" class="entropy.configuration.TestConfiguration"/>
        <method signature="TestSimpleManagedElementSet.testSet()[pri:0, instance:entropy.configuration.TestSimpleManagedElementSet@77bb1dd2]" name="testSet" class="entropy.configuration.TestSimpleManagedElementSet"/>
        <method signature="TestSimpleConfiguration.testGetRunnings()[pri:0, instance:entropy.configuration.TestSimpleConfiguration@6387f30b]" name="testGetRunnings" class="entropy.configuration.TestSimpleConfiguration"/>
        <method signature="TestSimpleManagedElementSet.testAdd()[pri:0, instance:entropy.configuration.TestSimpleManagedElementSet@77bb1dd2]" name="testAdd" class="entropy.configuration.TestSimpleManagedElementSet"/>
        <method signature="TestSimpleNode.testIPAddress()[pri:0, instance:entropy.configuration.TestSimpleNode@5c1d8d6f]" name="testIPAddress" class="entropy.configuration.TestSimpleNode"/>
        <method signature="TestSimpleConfiguration.testCopyConstructor()[pri:0, instance:entropy.configuration.TestSimpleConfiguration@6387f30b]" name="testCopyConstructor" class="entropy.configuration.TestSimpleConfiguration"/>
        <method signature="TestFastBinPacking.testLoadSup()[pri:0, instance:entropy.core.packers.TestFastBinPacking@1830a1a8]" name="testLoadSup" class="entropy.core.packers.TestFastBinPacking"/>
        <method signature="TestSimpleManagedElementSet.testRemove()[pri:0, instance:entropy.configuration.TestSimpleManagedElementSet@77bb1dd2]" name="testRemove" class="entropy.configuration.TestSimpleManagedElementSet"/>
        <method signature="TestSimpleConfiguration.testGetSleepings()[pri:0, instance:entropy.configuration.TestSimpleConfiguration@6387f30b]" name="testGetSleepings" class="entropy.configuration.TestSimpleConfiguration"/>
        <method signature="TestSimpleNode.testEquals()[pri:0, instance:entropy.configuration.TestSimpleNode@5c1d8d6f]" name="testEquals" class="entropy.configuration.TestSimpleNode"/>
        <method signature="TestSimpleConfiguration.testClone()[pri:0, instance:entropy.configuration.TestSimpleConfiguration@6387f30b]" name="testClone" class="entropy.configuration.TestSimpleConfiguration"/>
        <method signature="TestConfiguration.testSetRunOn()[pri:0, instance:entropy.configuration.TestConfiguration@20c52900]" name="testSetRunOn" class="entropy.configuration.TestConfiguration"/>
        <method signature="TestConfiguration.testEquals()[pri:0, instance:entropy.configuration.TestConfiguration@20c52900]" name="testEquals" class="entropy.configuration.TestConfiguration"/>
        <method signature="TestSimpleNode.testMemoryTotal()[pri:0, instance:entropy.configuration.TestSimpleNode@5c1d8d6f]" name="testMemoryTotal" class="entropy.configuration.TestSimpleNode"/>
        <method signature="TestConfiguration.testGetOnlines()[pri:0, instance:entropy.configuration.TestConfiguration@20c52900]" name="testGetOnlines" class="entropy.configuration.TestConfiguration"/>
        <method signature="TestSimpleConfiguration.testEquals()[pri:0, instance:entropy.configuration.TestSimpleConfiguration@6387f30b]" name="testEquals" class="entropy.configuration.TestSimpleConfiguration"/>
        <method signature="TestSimpleNode.testNbOfCPUs()[pri:0, instance:entropy.configuration.TestSimpleNode@5c1d8d6f]" name="testNbOfCPUs" class="entropy.configuration.TestSimpleNode"/>
        <method signature="TestPlainTextConfigurationSerializer.test()[pri:0, instance:entropy.configuration.parser.TestPlainTextConfigurationSerializer@4f3516d7]" name="test" class="entropy.configuration.parser.TestPlainTextConfigurationSerializer"/>
      </group> <!-- unit -->
    </groups>
    <test name="Command line test" duration-ms="939" started-at="2013-11-29T15:46:08Z" finished-at="2013-11-29T15:46:09Z">
      <class name="entropy.configuration.TestSimpleVirtualMachine">
        <test-method status="PASS" signature="testCPUConsumption()[pri:0, instance:entropy.configuration.TestSimpleVirtualMachine@354ec8d6]" name="testCPUConsumption" duration-ms="0" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCPUConsumption -->
        <test-method status="PASS" signature="testCopyConstructor()[pri:0, instance:entropy.configuration.TestSimpleVirtualMachine@354ec8d6]" name="testCopyConstructor" duration-ms="2" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCopyConstructor -->
        <test-method status="PASS" signature="testCPUMax()[pri:0, instance:entropy.configuration.TestSimpleVirtualMachine@354ec8d6]" name="testCPUMax" duration-ms="0" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCPUMax -->
        <test-method status="PASS" signature="testEquals()[pri:0, instance:entropy.configuration.TestSimpleVirtualMachine@354ec8d6]" name="testEquals" duration-ms="0" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals -->
        <test-method status="PASS" signature="testLazyConstructors()[pri:0, instance:entropy.configuration.TestSimpleVirtualMachine@354ec8d6]" name="testLazyConstructors" duration-ms="1" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLazyConstructors -->
        <test-method status="PASS" signature="testMemoryTotal()[pri:0, instance:entropy.configuration.TestSimpleVirtualMachine@354ec8d6]" name="testMemoryTotal" duration-ms="0" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMemoryTotal -->
        <test-method status="PASS" signature="testNbOfCPUs()[pri:0, instance:entropy.configuration.TestSimpleVirtualMachine@354ec8d6]" name="testNbOfCPUs" duration-ms="0" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNbOfCPUs -->
        <test-method status="PASS" signature="testTemplate()[pri:0, instance:entropy.configuration.TestSimpleVirtualMachine@354ec8d6]" name="testTemplate" duration-ms="0" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTemplate -->
        <test-method status="PASS" signature="testPlatform()[pri:0, instance:entropy.configuration.TestSimpleVirtualMachine@354ec8d6]" name="testPlatform" duration-ms="0" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPlatform -->
        <test-method status="PASS" signature="testToString()[pri:0, instance:entropy.configuration.TestSimpleVirtualMachine@354ec8d6]" name="testToString" duration-ms="1" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString -->
        <test-method status="PASS" signature="testWithNeeds()[pri:0, instance:entropy.configuration.TestSimpleVirtualMachine@354ec8d6]" name="testWithNeeds" duration-ms="0" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithNeeds -->
        <test-method status="PASS" signature="testWithNoNeeds()[pri:0, instance:entropy.configuration.TestSimpleVirtualMachine@354ec8d6]" name="testWithNoNeeds" duration-ms="0" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithNoNeeds -->
      </class> <!-- entropy.configuration.TestSimpleVirtualMachine -->
      <class name="entropy.core.packers.TestFastBinPacking">
        <test-method status="PASS" signature="testGuillaume()[pri:0, instance:entropy.core.packers.TestFastBinPacking@1830a1a8]" name="testGuillaume" duration-ms="133" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGuillaume -->
        <test-method status="PASS" signature="testLoadSup()[pri:0, instance:entropy.core.packers.TestFastBinPacking@1830a1a8]" name="testLoadSup" duration-ms="433" started-at="2013-11-29T16:46:09Z" finished-at="2013-11-29T16:46:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadSup -->
      </class> <!-- entropy.core.packers.TestFastBinPacking -->
      <class name="entropy.configuration.parser.TestPlainTextConfigurationSerializer">
        <test-method status="PASS" signature="testUnknownFile()[pri:0, instance:entropy.configuration.parser.TestPlainTextConfigurationSerializer@4f3516d7]" name="testUnknownFile" duration-ms="1" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <exception class="java.io.FileNotFoundException">
            <message>
              <![CDATA[/tmp/out5513660458809605463out (No such file or directory)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.FileNotFoundException: /tmp/out5513660458809605463out (No such file or directory)
	at java.io.FileInputStream.open(Native Method)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileInputStream.<init>(FileInputStream.java:97)
	at entropy.configuration.parser.FileConfigurationSerializer.read(FileConfigurationSerializer.java:44)
	at entropy.configuration.parser.TestPlainTextConfigurationSerializer.testUnknownFile(TestPlainTextConfigurationSerializer.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:158)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:98)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
]]>
            </full-stacktrace>
          </exception> <!-- java.io.FileNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnknownFile -->
        <test-method status="PASS" signature="testBadContent()[pri:0, instance:entropy.configuration.parser.TestPlainTextConfigurationSerializer@4f3516d7]" name="testBadContent" duration-ms="1" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <exception class="entropy.configuration.parser.ConfigurationSerializerException">
            <message>
              <![CDATA[Unrecognized characters: toto]]>
            </message>
            <full-stacktrace>
              <![CDATA[entropy.configuration.parser.ConfigurationSerializerException: Unrecognized characters: toto
	at entropy.configuration.parser.PlainTextConfigurationSerializer.unSerialize(PlainTextConfigurationSerializer.java:125)
	at entropy.configuration.parser.PlainTextConfigurationSerializer.unSerialize(PlainTextConfigurationSerializer.java:197)
	at entropy.configuration.parser.FileConfigurationSerializer.read(FileConfigurationSerializer.java:45)
	at entropy.configuration.parser.TestPlainTextConfigurationSerializer.testBadContent(TestPlainTextConfigurationSerializer.java:113)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:158)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:98)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
]]>
            </full-stacktrace>
          </exception> <!-- entropy.configuration.parser.ConfigurationSerializerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBadContent -->
        <test-method status="PASS" signature="test()[pri:0, instance:entropy.configuration.parser.TestPlainTextConfigurationSerializer@4f3516d7]" name="test" duration-ms="4" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
      </class> <!-- entropy.configuration.parser.TestPlainTextConfigurationSerializer -->
      <class name="entropy.configuration.TestConfigurationGenerator">
        <test-method status="PASS" signature="simpleTest()[pri:0, instance:entropy.configuration.TestConfigurationGenerator@4181496]" name="simpleTest" duration-ms="10" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleTest -->
        <test-method status="PASS" signature="testBunchOfVMs()[pri:0, instance:entropy.configuration.TestConfigurationGenerator@4181496]" name="testBunchOfVMs" duration-ms="2" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBunchOfVMs -->
        <test-method status="PASS" signature="testSimpleCluster()[pri:0, instance:entropy.configuration.TestConfigurationGenerator@4181496]" name="testSimpleCluster" duration-ms="3" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleCluster -->
      </class> <!-- entropy.configuration.TestConfigurationGenerator -->
      <class name="entropy.configuration.TestSimpleNode">
        <test-method status="PASS" signature="testCPUCapacity()[pri:0, instance:entropy.configuration.TestSimpleNode@5c1d8d6f]" name="testCPUCapacity" duration-ms="1" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCPUCapacity -->
        <test-method status="PASS" signature="testCopyConstructor()[pri:0, instance:entropy.configuration.TestSimpleNode@5c1d8d6f]" name="testCopyConstructor" duration-ms="0" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCopyConstructor -->
        <test-method status="PASS" signature="testLazyConstructor()[pri:0, instance:entropy.configuration.TestSimpleNode@5c1d8d6f]" name="testLazyConstructor" duration-ms="1" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLazyConstructor -->
        <test-method status="PASS" signature="testPlatform()[pri:0, instance:entropy.configuration.TestSimpleNode@5c1d8d6f]" name="testPlatform" duration-ms="0" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPlatform -->
        <test-method status="PASS" signature="testEquals()[pri:0, instance:entropy.configuration.TestSimpleNode@5c1d8d6f]" name="testEquals" duration-ms="0" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals -->
        <test-method status="PASS" signature="testIPAddress()[pri:0, instance:entropy.configuration.TestSimpleNode@5c1d8d6f]" name="testIPAddress" duration-ms="0" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIPAddress -->
        <test-method status="PASS" signature="testMemoryTotal()[pri:0, instance:entropy.configuration.TestSimpleNode@5c1d8d6f]" name="testMemoryTotal" duration-ms="1" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMemoryTotal -->
        <test-method status="PASS" signature="testNbOfCPUs()[pri:0, instance:entropy.configuration.TestSimpleNode@5c1d8d6f]" name="testNbOfCPUs" duration-ms="0" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNbOfCPUs -->
      </class> <!-- entropy.configuration.TestSimpleNode -->
      <class name="entropy.core.packers.FastBinPackerTest">
        <test-method status="PASS" signature="testInsertDescreasing()[pri:0, instance:entropy.core.packers.FastBinPackerTest@266ea5e1]" name="testInsertDescreasing" duration-ms="167" started-at="2013-11-29T16:46:09Z" finished-at="2013-11-29T16:46:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInsertDescreasing -->
      </class> <!-- entropy.core.packers.FastBinPackerTest -->
      <class name="entropy.tools.VMsPerMemTest">
        <test-method status="PASS" signature="testSimpleORdering()[pri:0, instance:entropy.tools.VMsPerMemTest@17f99aa6]" name="testSimpleORdering" duration-ms="3" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleORdering -->
      </class> <!-- entropy.tools.VMsPerMemTest -->
      <class name="entropy.core.heuristics.StickVMsHeuristicTest">
        <test-method status="PASS" signature="testVMsByCPUTIMESMemIncreasing()[pri:0, instance:entropy.core.heuristics.StickVMsHeuristicTest@7c1eea38]" name="testVMsByCPUTIMESMemIncreasing" duration-ms="18" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVMsByCPUTIMESMemIncreasing -->
        <test-method status="PASS" signature="testSimpleConfigurationRemaining()[pri:0, instance:entropy.core.heuristics.StickVMsHeuristicTest@7c1eea38]" name="testSimpleConfigurationRemaining" duration-ms="15" started-at="2013-11-29T16:46:09Z" depends-on-methods="entropy.core.heuristics.StickVMsHeuristicTest.testVMsByCPUTIMESMemIncreasing" finished-at="2013-11-29T16:46:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleConfigurationRemaining -->
      </class> <!-- entropy.core.heuristics.StickVMsHeuristicTest -->
      <class name="entropy.configuration.TestVirtualMachineComparator">
        <test-method status="PASS" signature="testEquivalent()[pri:0, instance:entropy.configuration.TestVirtualMachineComparator@476374f1]" name="testEquivalent" duration-ms="2" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquivalent -->
        <test-method status="PASS" signature="testNonEquivalent()[pri:0, instance:entropy.configuration.TestVirtualMachineComparator@476374f1]" name="testNonEquivalent" duration-ms="0" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNonEquivalent -->
        <test-method status="PASS" signature="testSort()[pri:0, instance:entropy.configuration.TestVirtualMachineComparator@476374f1]" name="testSort" duration-ms="0" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort -->
      </class> <!-- entropy.configuration.TestVirtualMachineComparator -->
      <class name="entropy.configuration.TestResourcePicker">
        <test-method status="PASS" signature="testNode()[pri:0, instance:entropy.configuration.TestResourcePicker@51a34231]" name="testNode" duration-ms="0" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNode -->
        <test-method status="PASS" signature="testVM()[pri:0, instance:entropy.configuration.TestResourcePicker@51a34231]" name="testVM" duration-ms="0" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVM -->
      </class> <!-- entropy.configuration.TestResourcePicker -->
      <class name="entropy.configuration.TestVirtualMachinesSetComparator">
        <test-method status="PASS" signature="test1()[pri:0, instance:entropy.configuration.TestVirtualMachinesSetComparator@69d5ee81]" name="test1" duration-ms="1" started-at="2013-11-29T16:46:09Z" finished-at="2013-11-29T16:46:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
      </class> <!-- entropy.configuration.TestVirtualMachinesSetComparator -->
      <class name="entropy.configuration.TestSimpleManagedElementSet">
        <test-method status="PASS" signature="testToString()[pri:0, instance:entropy.configuration.TestSimpleManagedElementSet@77bb1dd2]" name="testToString" duration-ms="1" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString -->
        <test-method status="PASS" signature="testGetFromName()[pri:0, instance:entropy.configuration.TestSimpleManagedElementSet@77bb1dd2]" name="testGetFromName" duration-ms="1" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFromName -->
        <test-method status="PASS" signature="testEquals()[pri:0, instance:entropy.configuration.TestSimpleManagedElementSet@77bb1dd2]" name="testEquals" duration-ms="0" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals -->
        <test-method status="PASS" signature="testSelfContains()[pri:0, instance:entropy.configuration.TestSimpleManagedElementSet@77bb1dd2]" name="testSelfContains" duration-ms="0" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelfContains -->
        <test-method status="PASS" signature="testCopyConstructor()[pri:0, instance:entropy.configuration.TestSimpleManagedElementSet@77bb1dd2]" name="testCopyConstructor" duration-ms="1" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCopyConstructor -->
        <test-method status="PASS" signature="testRetainAll()[pri:0, instance:entropy.configuration.TestSimpleManagedElementSet@77bb1dd2]" name="testRetainAll" duration-ms="0" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRetainAll -->
        <test-method status="PASS" signature="testSingleton()[pri:0, instance:entropy.configuration.TestSimpleManagedElementSet@77bb1dd2]" name="testSingleton" duration-ms="0" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingleton -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:entropy.configuration.TestSimpleManagedElementSet@77bb1dd2]" name="testClear" duration-ms="0" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testAddAll()[pri:0, instance:entropy.configuration.TestSimpleManagedElementSet@77bb1dd2]" name="testAddAll" duration-ms="0" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAll -->
        <test-method status="PASS" signature="testSet()[pri:0, instance:entropy.configuration.TestSimpleManagedElementSet@77bb1dd2]" name="testSet" duration-ms="0" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:entropy.configuration.TestSimpleManagedElementSet@77bb1dd2]" name="testAdd" duration-ms="0" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testRemove()[pri:0, instance:entropy.configuration.TestSimpleManagedElementSet@77bb1dd2]" name="testRemove" duration-ms="0" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
      </class> <!-- entropy.configuration.TestSimpleManagedElementSet -->
      <class name="entropy.configuration.TestSimpleConfiguration">
        <test-method status="PASS" signature="testSetRunOn()[pri:0, instance:entropy.configuration.TestSimpleConfiguration@6387f30b]" name="testSetRunOn" duration-ms="2" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetRunOn -->
        <test-method status="PASS" signature="testAddOffline()[pri:0, instance:entropy.configuration.TestSimpleConfiguration@6387f30b]" name="testAddOffline" duration-ms="1" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddOffline -->
        <test-method status="PASS" signature="testGetLocation()[pri:0, instance:entropy.configuration.TestSimpleConfiguration@6387f30b]" name="testGetLocation" duration-ms="2" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLocation -->
        <test-method status="PASS" signature="testGetOnlines()[pri:0, instance:entropy.configuration.TestSimpleConfiguration@6387f30b]" name="testGetOnlines" duration-ms="1" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOnlines -->
        <test-method status="PASS" signature="testVMStateConsistency()[pri:0, instance:entropy.configuration.TestSimpleConfiguration@6387f30b]" name="testVMStateConsistency" duration-ms="1" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVMStateConsistency -->
        <test-method status="PASS" signature="testSetSleepOn()[pri:0, instance:entropy.configuration.TestSimpleConfiguration@6387f30b]" name="testSetSleepOn" duration-ms="1" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetSleepOn -->
        <test-method status="PASS" signature="testNotEquals()[pri:0, instance:entropy.configuration.TestSimpleConfiguration@6387f30b]" name="testNotEquals" duration-ms="4" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNotEquals -->
        <test-method status="PASS" signature="testToString()[pri:0, instance:entropy.configuration.TestSimpleConfiguration@6387f30b]" name="testToString" duration-ms="1" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString -->
        <test-method status="PASS" signature="testAddWaiting()[pri:0, instance:entropy.configuration.TestSimpleConfiguration@6387f30b]" name="testAddWaiting" duration-ms="1" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddWaiting -->
        <test-method status="PASS" signature="testAddOnline()[pri:0, instance:entropy.configuration.TestSimpleConfiguration@6387f30b]" name="testAddOnline" duration-ms="0" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddOnline -->
        <test-method status="PASS" signature="testAddOnline2()[pri:0, instance:entropy.configuration.TestSimpleConfiguration@6387f30b]" name="testAddOnline2" duration-ms="1" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddOnline2 -->
        <test-method status="PASS" signature="testGetWaitings()[pri:0, instance:entropy.configuration.TestSimpleConfiguration@6387f30b]" name="testGetWaitings" duration-ms="1" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetWaitings -->
        <test-method status="PASS" signature="testRemove()[pri:0, instance:entropy.configuration.TestSimpleConfiguration@6387f30b]" name="testRemove" duration-ms="0" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method status="PASS" signature="testGetRunnings()[pri:0, instance:entropy.configuration.TestSimpleConfiguration@6387f30b]" name="testGetRunnings" duration-ms="2" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetRunnings -->
        <test-method status="PASS" signature="testCopyConstructor()[pri:0, instance:entropy.configuration.TestSimpleConfiguration@6387f30b]" name="testCopyConstructor" duration-ms="2" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCopyConstructor -->
        <test-method status="PASS" signature="testGetSleepings()[pri:0, instance:entropy.configuration.TestSimpleConfiguration@6387f30b]" name="testGetSleepings" duration-ms="1" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSleepings -->
        <test-method status="PASS" signature="testClone()[pri:0, instance:entropy.configuration.TestSimpleConfiguration@6387f30b]" name="testClone" duration-ms="5" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClone -->
        <test-method status="PASS" signature="testEquals()[pri:0, instance:entropy.configuration.TestSimpleConfiguration@6387f30b]" name="testEquals" duration-ms="2" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals -->
      </class> <!-- entropy.configuration.TestSimpleConfiguration -->
      <class name="entropy.configuration.TestManagedElementSets">
        <test-method status="PASS" signature="testMax()[pri:0, instance:entropy.configuration.TestManagedElementSets@52929ed4]" name="testMax" duration-ms="3" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMax -->
        <test-method status="PASS" signature="testMin()[pri:0, instance:entropy.configuration.TestManagedElementSets@52929ed4]" name="testMin" duration-ms="0" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMin -->
        <test-method status="PASS" signature="testNodeMin()[pri:0, instance:entropy.configuration.TestManagedElementSets@52929ed4]" name="testNodeMin" duration-ms="0" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNodeMin -->
        <test-method status="PASS" signature="testNodeMax()[pri:0, instance:entropy.configuration.TestManagedElementSets@52929ed4]" name="testNodeMax" duration-ms="0" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNodeMax -->
        <test-method status="PASS" signature="testNodeSum()[pri:0, instance:entropy.configuration.TestManagedElementSets@52929ed4]" name="testNodeSum" duration-ms="0" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNodeSum -->
        <test-method status="PASS" signature="testSum()[pri:0, instance:entropy.configuration.TestManagedElementSets@52929ed4]" name="testSum" duration-ms="1" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSum -->
      </class> <!-- entropy.configuration.TestManagedElementSets -->
      <class name="entropy.configuration.TestConfiguration">
        <test-method status="PASS" signature="testGetSleepingLocation()[pri:0, instance:entropy.configuration.TestConfiguration@20c52900]" name="testGetSleepingLocation" duration-ms="2" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSleepingLocation -->
        <test-method status="PASS" signature="testGetSleepings()[pri:0, instance:entropy.configuration.TestConfiguration@20c52900]" name="testGetSleepings" duration-ms="1" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSleepings -->
        <test-method status="PASS" signature="testGetPosition()[pri:0, instance:entropy.configuration.TestConfiguration@20c52900]" name="testGetPosition" duration-ms="1" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPosition -->
        <test-method status="PASS" signature="testSetSleepOn()[pri:0, instance:entropy.configuration.TestConfiguration@20c52900]" name="testSetSleepOn" duration-ms="2" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetSleepOn -->
        <test-method status="PASS" signature="testRemove()[pri:0, instance:entropy.configuration.TestConfiguration@20c52900]" name="testRemove" duration-ms="1" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method status="PASS" signature="testToString()[pri:0, instance:entropy.configuration.TestConfiguration@20c52900]" name="testToString" duration-ms="1" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString -->
        <test-method status="PASS" signature="testAddOffline()[pri:0, instance:entropy.configuration.TestConfiguration@20c52900]" name="testAddOffline" duration-ms="1" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddOffline -->
        <test-method status="PASS" signature="testGetWaitings()[pri:0, instance:entropy.configuration.TestConfiguration@20c52900]" name="testGetWaitings" duration-ms="1" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetWaitings -->
        <test-method status="PASS" signature="testGetRunnings()[pri:0, instance:entropy.configuration.TestConfiguration@20c52900]" name="testGetRunnings" duration-ms="2" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetRunnings -->
        <test-method status="PASS" signature="testAddWaiting()[pri:0, instance:entropy.configuration.TestConfiguration@20c52900]" name="testAddWaiting" duration-ms="1" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddWaiting -->
        <test-method status="PASS" signature="testAddOnline()[pri:0, instance:entropy.configuration.TestConfiguration@20c52900]" name="testAddOnline" duration-ms="1" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddOnline -->
        <test-method status="PASS" signature="testNotEquals()[pri:0, instance:entropy.configuration.TestConfiguration@20c52900]" name="testNotEquals" duration-ms="5" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNotEquals -->
        <test-method status="PASS" signature="testGetRunningLocation()[pri:0, instance:entropy.configuration.TestConfiguration@20c52900]" name="testGetRunningLocation" duration-ms="1" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetRunningLocation -->
        <test-method status="PASS" signature="testSetRunOn()[pri:0, instance:entropy.configuration.TestConfiguration@20c52900]" name="testSetRunOn" duration-ms="2" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetRunOn -->
        <test-method status="PASS" signature="testEquals()[pri:0, instance:entropy.configuration.TestConfiguration@20c52900]" name="testEquals" duration-ms="2" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals -->
        <test-method status="PASS" signature="testGetOnlines()[pri:0, instance:entropy.configuration.TestConfiguration@20c52900]" name="testGetOnlines" duration-ms="1" started-at="2013-11-29T16:46:08Z" finished-at="2013-11-29T16:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOnlines -->
      </class> <!-- entropy.configuration.TestConfiguration -->
      <class name="entropy.core.PowerStateTest">
        <test-method status="PASS" signature="smallcentertest()[pri:0, instance:entropy.core.PowerStateTest@57279d82]" name="smallcentertest" duration-ms="34" started-at="2013-11-29T16:46:09Z" finished-at="2013-11-29T16:46:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smallcentertest -->
      </class> <!-- entropy.core.PowerStateTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
