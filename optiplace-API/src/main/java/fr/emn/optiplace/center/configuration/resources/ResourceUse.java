package fr.emn.optiplace.center.configuration.resources;

import org.chocosolver.solver.variables.IntVar;
import fr.emn.optiplace.solver.choco.IReconfigurationProblem;

/**
 * <p>
 * pair of IntVar[] generated by a {@link ResourceHandler} on its associate
 * phase
 * </p>
 * <p>
 * A {@link ResourceSpecification} + a {@link IReconfigurationProblem} = a
 * {@link ResourceUse} . <br />
 * Represents the effective use of a resource in a Choco problem, with IntVar
 * corresponding to the Vms static uses and the nodes dynamic uses. The uses are
 * assumed to be packed using the problem's packer.
 * <p>
 * 
 * @author Guillaume Le LouÃ«t [guillaume.lelouet@gmail.com] 2013
 */
public class ResourceUse {

	/**
	 * effective constant resource usage; ie the item i uses use[i] on the
	 * resource
	 */
	int[] itemsConsumptions = null;

	/** effective resource use of a bin. */
	IntVar[] binsUse = null;

	public ResourceUse() {
	}

	public ResourceUse(int[] vmsUse, IntVar[] binsUse) {
		itemsConsumptions = vmsUse;
		this.binsUse = binsUse;
	}

	/** @return the constant consumption of the vms */
	public int[] getVMsUses() {
		return itemsConsumptions;
	}

	/** @return the uses of the nodes */
	public IntVar[] getNodesUse() {
		return binsUse;
	}
}